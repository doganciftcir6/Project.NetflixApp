// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.NetflixApp.DataAccess.Contexts.EntityFramework;

namespace Project.NetflixApp.DataAccess.Migrations
{
    [DbContext(typeof(NetflixAppContext))]
    partial class NetflixAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.NetflixApp.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Religious"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dramatic"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Education"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Erotic"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Fantastic"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Thriller"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Horror"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Music"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Political"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Propaganda"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Romantic"
                        },
                        new
                        {
                            Id = 17,
                            Description = "War"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Sport"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Crime"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Historical"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Life is Narrative"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "United States"
                        },
                        new
                        {
                            Id = 2,
                            Description = "India"
                        },
                        new
                        {
                            Id = 3,
                            Description = "United Kingdom"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Japan"
                        },
                        new
                        {
                            Id = 5,
                            Description = "South Korea"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Duraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Duractions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "1 Season"
                        },
                        new
                        {
                            Id = 2,
                            Description = "2 Season"
                        },
                        new
                        {
                            Id = 3,
                            Description = "3 Season"
                        },
                        new
                        {
                            Id = 4,
                            Description = "90 min"
                        },
                        new
                        {
                            Id = 5,
                            Description = "94 min"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Definition = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Definition = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Definition = "I do not want to specify"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Member"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cast")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DuractionId")
                        .HasColumnType("int");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseYear")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TypeEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DuractionId");

                    b.HasIndex("RatingId");

                    b.HasIndex("TypeEntityId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.ProductionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductionId", "CategoryId")
                        .IsUnique();

                    b.ToTable("ProductionCategories");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.ProductionComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductionComments");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "TV-MA"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TV-14"
                        },
                        new
                        {
                            Id = 3,
                            Description = "TV-PG"
                        },
                        new
                        {
                            Id = 4,
                            Description = "R"
                        },
                        new
                        {
                            Id = 5,
                            Description = "PG-13"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.TypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.ToTable("TypeEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Movie"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tv Show"
                        });
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId", "OperationClaimId")
                        .IsUnique();

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Production", b =>
                {
                    b.HasOne("Project.NetflixApp.Entities.Country", "Country")
                        .WithMany("Productions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.Duraction", "Duraction")
                        .WithMany("Productions")
                        .HasForeignKey("DuractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.Rating", "Rating")
                        .WithMany("Productions")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.TypeEntity", "TypeEntity")
                        .WithMany("Productions")
                        .HasForeignKey("TypeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Duraction");

                    b.Navigation("Rating");

                    b.Navigation("TypeEntity");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.ProductionCategory", b =>
                {
                    b.HasOne("Project.NetflixApp.Entities.Category", "Category")
                        .WithMany("ProductionCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.Production", "Production")
                        .WithMany("ProductionCategories")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.ProductionComment", b =>
                {
                    b.HasOne("Project.NetflixApp.Entities.Production", "Production")
                        .WithMany("ProductionComments")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.User", "User")
                        .WithMany("ProductionComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.User", b =>
                {
                    b.HasOne("Project.NetflixApp.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Project.NetflixApp.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.NetflixApp.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Category", b =>
                {
                    b.Navigation("ProductionCategories");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Country", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Duraction", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Production", b =>
                {
                    b.Navigation("ProductionCategories");

                    b.Navigation("ProductionComments");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.Rating", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.TypeEntity", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Project.NetflixApp.Entities.User", b =>
                {
                    b.Navigation("ProductionComments");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
